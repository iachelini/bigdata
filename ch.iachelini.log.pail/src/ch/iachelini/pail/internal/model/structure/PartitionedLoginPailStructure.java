package ch.iachelini.pail.internal.model.structure;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.ArrayList;import java.util.Date;import java.util.List;import ch.iachelini.pail.internal.model.Login;public class PartitionedLoginPailStructure extends LoginPailStructure {	private static final long serialVersionUID = 1L;	SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");	// Logins are vertically partitioned in folders corresponding to the login	// date	public List<String> getTarget(Login object) {		ArrayList<String> directoryPath = new ArrayList<String>();		// the timestamp of the Login object is converted to an understandable		// form		Date date = new Date(object.loginUnixTime * 1000L);		directoryPath.add(formatter.format(date));		return directoryPath;	}	// isValidTarget verifies the directory structure has a depth of one and	// that the folder name is a date	public boolean isValidTarget(String... strings) {		if (strings.length != 1)			return false;		try {			return (formatter.parse(strings[0]) != null);		} catch (ParseException e) {			return false;		}	}}